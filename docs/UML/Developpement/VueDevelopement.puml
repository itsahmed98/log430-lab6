@startuml VueDéveloppement_MagasinCentral
title Vue de Développement - Magasin Central
!pragma layout smetana
left to right direction

skinparam component {
  horizontalSpacing 30
  verticalSpacing 20
}
skinparam package {
  padding 20
}

rectangle "Application client (Frontend)" as clientApp <<Layer>> {
  package "Web MVC (Présentation)" as WebMVC <<Layer>> {
    package "Views" as view <<component>> {
      [CatalogueView] <<Component>>
      [AdministrationView] <<Component>>
      [InventaireView] <<Component>>
      [VenteView] <<Component>>
      [ECommerce] <<Component>>
    }

    package "Controllers" as controller <<component>> {
      [CatalogueController] <<Component>> as CatalogueControllerClient
      [AdministrationController] <<Component>>
      [InventaireController] <<Component>>
      [ECommerceController] <<Component>>
      [VenteController] <<Component>> as VenteControllerClient
    }
  }

  view -down-> controller : <<Requête Http>>
}

package "Backend" {
  database "Saga DB" as sagaDb <<Database>>
  database "Vente DB" as venteDb <<Database>>
  database "Inventaire DB" as inventaireDb <<Database>>
  database "Catalogue DB" as catalogueDb <<Database>>

  package "SagaOrchestrator" as sagaService <<Microservice>> {
    [VenteSagaController] <<API>>
    [Orchestrator] <<Métier>>
    [SagaDbContext] <<Persistence>>
    VenteSagaController --> Orchestrator
    Orchestrator --> SagaDbContext
    SagaDbContext --> sagaDb
  }

  package "VenteMcService" as venteMcService <<Microservice>> {
    [VenteController] <<API>>
    [VenteService] <<Métier>>
    [VenteDbContext] <<Persistence>>
    VenteController --> VenteService
    VenteService --> VenteDbContext
    VenteDbContext --> venteDb
  }

  package "InventaireMcService" as inventaireMcService <<Microservice>> {
    [ReapproController] <<API>>
    [StockController] <<API>>
    [ReapprovisionnementService] <<Métier>>
    [StockService] <<Métier>>
    [InventaireService] <<Métier>>
    [InventaireDbContext] <<Persistence>>
    ReapproController --> ReapprovisionnementService
    StockController --> StockService
    ReapprovisionnementService --> InventaireService
    ReapprovisionnementService --> InventaireDbContext
    StockService --> InventaireDbContext
    InventaireService --> InventaireDbContext
    InventaireDbContext --> inventaireDb
  }

  package "CatalogueMcService" as catalogueMcService <<Microservice>> {
    [CatalogueController] <<API>>
    [CatalogueService] <<Métier>>
    [CatalogueDbContext] <<Persistence>>
    CatalogueController --> CatalogueService
    CatalogueService --> CatalogueDbContext
    CatalogueDbContext --> catalogueDb
  }
}


VenteControllerClient --> VenteSagaController : <<Requête Http via API Gateway>>
VenteSagaController --> venteMcService : <<Requête Http via API Gateway>>
VenteSagaController --> inventaireMcService : <<Requête Http via API Gateway>>
VenteSagaController --> catalogueMcService : <<Requête Http via API Gateway>>

@enduml
