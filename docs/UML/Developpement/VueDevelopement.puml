@startuml VueDéveloppement_MagasinCentral
title Vue de Développement - Magasin Central
!pragma layout smetana
left to right direction

skinparam component {
  horizontalSpacing 40
  verticalSpacing 30
}
skinparam package {
  padding 20
}

rectangle "Application client (Frontend)" as clientApp <<Layer>> {
  package "Web MVC (Présentation)" as WebMVC <<Layer>> {
    package "Views" as view <<component>> {
      [CatalogueView] <<Component>>
        note right of [CatalogueView]
          . Index.csthml
          . Modifier.csthml
          . Rechercher.csthml
        end note
      [AdministrationView] <<Component>>
        note right of [AdministrationView]
          . Performance.csthml
          . Rapport.csthml
        end note
      [InventaireView] <<Component>>
        note right of [InventaireView]
          . DemandesEnAttente.csthml
          . NouvelleDemande.csthml
          . StockCentral.csthml
        end note
      [VenteView] <<Component>>
        note right of [VenteView]
          . Enregistrer.csthml
          . Liste.csthml
        end note
      [ECommerce] <<Component>>
        note right of [ECommerce]
          . Clients.csthml
          . CreateClient.csthml
          . PanierClient.csthml
        end note
    }

    package "Controllers" as controller <<component>> {
      [CatalogueController] <<Component>>
      [AdministrationController] <<Component>>
      [InventaireController] <<Component>>
      [ECommerceController] <<Component>>
      [VenteController] <<Component>>
      }
    }

    package "MagasinCentral.Api" as API <<Layer>> {
      [AuthController] <<Component>>
      [PerformancesApiController] <<Component>>
      [RapportApiController] <<Component>>
      [ProduitApiController] <<Component>>
      [StockApiController] <<Component>>
    }
}

database "Catalogue DB" as catalogueDb <<Database>>
package "CatalogueMcService" as catalogueMcService <<Microservice>> {
  [CatalogueController] <<API>> as catalogueSvcController
  [CatalogueService] <<Métier>>
  [CatalogueDbContext] <<Persistence>>

  catalogueSvcController --> CatalogueService
  CatalogueService --> CatalogueDbContext
  CatalogueDbContext --> catalogueDb
}

database "Administration DB" as administrationDb <<Database>>
package "AdministrationMcService" as administrationMcService <<Microservice>> {
  [MagasinController] <<API>> as magasinController
  [PerformanceController] <<API>> as performanceController
  [RapportController] <<API>> as rapportController
  [MagasinService] <<Métier>>
  [PerformanceService] <<Métier>>
  [RapportService] <<Métier>>
  [AdminDbContext] <<Persistence>>
  [Produit] <<Entity>>

  magasinController --> MagasinService
  performanceController --> PerformanceService
  rapportController --> RapportService
  MagasinService --> AdminDbContext
  PerformanceService --> AdminDbContext
  RapportService --> AdminDbContext
  AdminDbContext --> administrationDb
}

database "Ecommerce DB" as ecommerceDb <<Database>>
package "ECommerceMcService" as ecommerceMcService <<Microservice>> {
  [ClientController] <<API>> as clientController
  [PanierController] <<API>> as panierController
  [ClientService] <<Métier>>
  [PanierService] <<Métier>>

  [ClientDbContext] <<Persistence>>

  clientController --> ClientService
  panierController --> PanierService
  ClientService --> ClientDbContext
  PanierService --> ClientDbContext
  ClientDbContext --> ecommerceDb
}

database "Inventaire DB" as inventaireDb <<Database>>
package "InventaireMcService" as inventaireMcService <<Microservice>> {
  [ReapproController] <<API>> as reapproController
  [StockController] <<API>> as stockController

  [ReapprovisionnementService] <<Métier>>
  [StockService] <<Métier>>
  [InventaireService] <<Métier>>
  [InventaireDbContext] <<Persistence>>

  reapproController --> ReapprovisionnementService
  stockController --> StockService
  ReapprovisionnementService --> InventaireService
  ReapprovisionnementService --> InventaireDbContext
  StockService --> InventaireDbContext
  InventaireService --> InventaireDbContext
  InventaireDbContext --> inventaireDb
}

database "Vente DB" as venteDb <<Database>>
package "VenteMcService" as venteMcService <<Microservice>> {
  [VenteController] <<API>> as venteController
  [VenteService] <<Métier>>
  [VenteDbContext] <<Persistence>>

  venteController --> VenteService
  VenteService --> VenteDbContext
  VenteDbContext --> venteDb
}

CatalogueController -> catalogueMcService : <<Requête Http via API Gateway>>
AdministrationController -> administrationMcService : <<Requête Http via API Gateway>>
ECommerceController -> ecommerceMcService : <<Requête Http via API Gateway>>
InventaireController -> inventaireMcService : <<Requête Http via API Gateway>>
VenteController -> venteMcService : <<Requête Http via API Gateway>>

RapportService --> venteMcService : <<Requête Http via API Gateway>>
RapportService --> inventaireMcService : <<Requête Http via API Gateway>>
RapportService --> catalogueMcService : <<Requête Http via API Gateway>>

PanierService --> venteMcService : <<Requête Http via API Gateway>>
PanierService --> inventaireMcService : <<Requête Http via API Gateway>>
PanierService --> catalogueMcService : <<Requête Http via API Gateway>>

VenteService --> inventaireMcService : <<Requête Http via API Gateway>>
VenteService --> catalogueMcService : <<Requête Http via API Gateway>>

view -> controller : <<Requête Http>>

@enduml
