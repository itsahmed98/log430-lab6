@startuml "Process View - Enregistrer une vente"
title Process View - Enregistrer une vente
actor "utilisateur" as utilisateur

participant "Browser" as browser
participant "MagasinCentral\n<<VenteController>>" as venteControllerClient
participant "API Gateway\n<<Kong>>" as apiGateway
participant "SagaOrchestrator\n<<Saga API>>" as sagaOrchestrator
participant "InventaireMcService\n<<InventaireController>>" as inventaireController
participant "CatalogueMcService\n<<CatalogueController>>" as catalogueController
participant "VenteMcService\n<<VenteController>>" as venteController
participant "VenteMcService\n<<VenteService>>" as venteService
participant "VenteMcService\n<<VenteDbContext>>" as venteDbContext

utilisateur -> browser : Enregistrer une vente
browser -> venteControllerClient : POST /Vente
venteControllerClient -> apiGateway : POST api/v1/ventes ,\nPayload: vente
apiGateway -> sagaOrchestrator : POST api/v1/ventes ,\nPayload: vente
sagaOrchestrator -> inventaireController : GET api/v1/inventaire/stocks/{vente.MagasinId}/{vente.ProduitId}
inventaireController --> sagaOrchestrator : Stocks
sagaOrchestrator -> catalogueController : GET api/v1/catalogue/produits/{vente.ProduitId}
catalogueController --> sagaOrchestrator : Produit
sagaOrchestrator -> venteController : POST api/v1/ventes ,\nPayload: vente
venteController -> venteService : CreerVenteAsync(vente)
venteService -> venteDbContext : Add(vente)
venteService -> venteDbContext : SaveChangesAsync()

venteService --> venteController : 204 No Content
venteController --> sagaOrchestrator : 204 No Content

sagaOrchestrator -> inventaireController : PUT api/v1/inventaire/stocks/{vente.MagasinId}/{vente.ProduitId}/{vente.Quantite}
inventaireController --> sagaOrchestrator : Stocks mis Ã  jour

sagaOrchestrator --> apiGateway : 204 No Content
apiGateway --> venteControllerClient : 204 No Content
venteControllerClient --> browser : Afficher confirmation de vente
@enduml
