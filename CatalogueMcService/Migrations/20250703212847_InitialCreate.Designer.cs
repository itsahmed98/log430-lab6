// <auto-generated />
using CatalogueMcService.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CatalogueMcService.Migrations
{
    [DbContext(typeof(CatalogueDbContext))]
    [Migration("20250703212847_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CatalogueMcService.Models.Produit", b =>
                {
                    b.Property<int>("ProduitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("ProduitId"));

                    b.Property<string>("Categorie")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("character varying(500)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<decimal>("Prix")
                        .HasColumnType("numeric");

                    b.HasKey("ProduitId");

                    b.ToTable("Produits");

                    b.HasData(
                        new
                        {
                            ProduitId = 1,
                            Categorie = "Papeterie",
                            Description = "Stylo à bille bleu",
                            Nom = "Stylo",
                            Prix = 1.50m
                        },
                        new
                        {
                            ProduitId = 2,
                            Categorie = "Papeterie",
                            Description = "Carnet de notes A5",
                            Nom = "Carnet",
                            Prix = 3.75m
                        },
                        new
                        {
                            ProduitId = 3,
                            Categorie = "Électronique",
                            Description = "Clé USB 16 Go",
                            Nom = "Clé USB 16 Go",
                            Prix = 12.00m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
