// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VenteMcService.Data;

#nullable disable

namespace VenteMcService.Migrations
{
    [DbContext(typeof(VenteDbContext))]
    [Migration("20250704183141_PreviousVersion")]
    partial class PreviousVersion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VenteMcService.Models.LigneVente", b =>
                {
                    b.Property<int>("LigneVenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LigneVenteId"));

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("numeric");

                    b.Property<int>("ProduitId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantite")
                        .HasColumnType("integer");

                    b.Property<int>("VenteId")
                        .HasColumnType("integer");

                    b.HasKey("LigneVenteId");

                    b.HasIndex("VenteId");

                    b.ToTable("LignesVente");

                    b.HasData(
                        new
                        {
                            LigneVenteId = 1,
                            PrixUnitaire = 1.50m,
                            ProduitId = 1,
                            Quantite = 2,
                            VenteId = 1
                        },
                        new
                        {
                            LigneVenteId = 2,
                            PrixUnitaire = 3.75m,
                            ProduitId = 2,
                            Quantite = 1,
                            VenteId = 1
                        },
                        new
                        {
                            LigneVenteId = 3,
                            PrixUnitaire = 12.00m,
                            ProduitId = 3,
                            Quantite = 5,
                            VenteId = 2
                        });
                });

            modelBuilder.Entity("VenteMcService.Models.Vente", b =>
                {
                    b.Property<int>("VenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VenteId"));

                    b.Property<int?>("ClientId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsEnLigne")
                        .HasColumnType("boolean");

                    b.Property<int?>("MagasinId")
                        .HasColumnType("integer");

                    b.HasKey("VenteId");

                    b.ToTable("Ventes");

                    b.HasData(
                        new
                        {
                            VenteId = 1,
                            Date = new DateTime(2025, 7, 2, 18, 31, 41, 34, DateTimeKind.Utc).AddTicks(4815),
                            IsEnLigne = false,
                            MagasinId = 2
                        },
                        new
                        {
                            VenteId = 2,
                            Date = new DateTime(2025, 7, 3, 18, 31, 41, 34, DateTimeKind.Utc).AddTicks(4822),
                            IsEnLigne = false,
                            MagasinId = 3
                        },
                        new
                        {
                            VenteId = 3,
                            ClientId = 2,
                            Date = new DateTime(2025, 7, 1, 18, 31, 41, 34, DateTimeKind.Utc).AddTicks(4824),
                            IsEnLigne = true
                        },
                        new
                        {
                            VenteId = 4,
                            Date = new DateTime(2025, 6, 29, 18, 31, 41, 34, DateTimeKind.Utc).AddTicks(4826),
                            IsEnLigne = false,
                            MagasinId = 1
                        });
                });

            modelBuilder.Entity("VenteMcService.Models.LigneVente", b =>
                {
                    b.HasOne("VenteMcService.Models.Vente", null)
                        .WithMany("Lignes")
                        .HasForeignKey("VenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VenteMcService.Models.Vente", b =>
                {
                    b.Navigation("Lignes");
                });
#pragma warning restore 612, 618
        }
    }
}
