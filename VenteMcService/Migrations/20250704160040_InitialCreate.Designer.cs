// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using VenteMcService.Data;

#nullable disable

namespace VenteMcService.Migrations
{
    [DbContext(typeof(VenteDbContext))]
    [Migration("20250704160040_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("VenteMcService.Models.LigneVente", b =>
                {
                    b.Property<int>("LigneVenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("LigneVenteId"));

                    b.Property<decimal>("PrixUnitaire")
                        .HasColumnType("numeric");

                    b.Property<int>("ProduitId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantite")
                        .HasColumnType("integer");

                    b.Property<int>("VenteId")
                        .HasColumnType("integer");

                    b.HasKey("LigneVenteId");

                    b.HasIndex("VenteId");

                    b.ToTable("LignesVente");

                    b.HasData(
                        new
                        {
                            LigneVenteId = 1,
                            PrixUnitaire = 12.5m,
                            ProduitId = 1,
                            Quantite = 2,
                            VenteId = 1
                        });
                });

            modelBuilder.Entity("VenteMcService.Models.Vente", b =>
                {
                    b.Property<int>("VenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("VenteId"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("TypeVente")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("character varying(13)");

                    b.HasKey("VenteId");

                    b.ToTable("Ventes", (string)null);

                    b.HasDiscriminator<string>("TypeVente").HasValue("Vente");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("VenteMcService.Models.VenteECommerce", b =>
                {
                    b.HasBaseType("VenteMcService.Models.Vente");

                    b.Property<int>("ClientId")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("ECommerce");

                    b.HasData(
                        new
                        {
                            VenteId = 8,
                            Date = new DateTime(2025, 7, 3, 16, 0, 40, 438, DateTimeKind.Utc).AddTicks(1898),
                            ClientId = 1
                        },
                        new
                        {
                            VenteId = 9,
                            Date = new DateTime(2025, 7, 2, 16, 0, 40, 438, DateTimeKind.Utc).AddTicks(1900),
                            ClientId = 2
                        },
                        new
                        {
                            VenteId = 10,
                            Date = new DateTime(2025, 6, 28, 16, 0, 40, 438, DateTimeKind.Utc).AddTicks(1900),
                            ClientId = 3
                        });
                });

            modelBuilder.Entity("VenteMcService.Models.VentePOS", b =>
                {
                    b.HasBaseType("VenteMcService.Models.Vente");

                    b.Property<int>("MagasinId")
                        .HasColumnType("integer");

                    b.HasDiscriminator().HasValue("POS");

                    b.HasData(
                        new
                        {
                            VenteId = 1,
                            Date = new DateTime(2025, 7, 3, 16, 0, 40, 438, DateTimeKind.Utc).AddTicks(1806),
                            MagasinId = 1
                        },
                        new
                        {
                            VenteId = 2,
                            Date = new DateTime(2025, 6, 30, 16, 0, 40, 438, DateTimeKind.Utc).AddTicks(1814),
                            MagasinId = 2
                        },
                        new
                        {
                            VenteId = 3,
                            Date = new DateTime(2025, 7, 1, 16, 0, 40, 438, DateTimeKind.Utc).AddTicks(1815),
                            MagasinId = 1
                        },
                        new
                        {
                            VenteId = 4,
                            Date = new DateTime(2025, 7, 2, 16, 0, 40, 438, DateTimeKind.Utc).AddTicks(1815),
                            MagasinId = 3
                        },
                        new
                        {
                            VenteId = 5,
                            Date = new DateTime(2025, 6, 28, 16, 0, 40, 438, DateTimeKind.Utc).AddTicks(1816),
                            MagasinId = 2
                        },
                        new
                        {
                            VenteId = 6,
                            Date = new DateTime(2025, 6, 30, 16, 0, 40, 438, DateTimeKind.Utc).AddTicks(1817),
                            MagasinId = 1
                        },
                        new
                        {
                            VenteId = 7,
                            Date = new DateTime(2025, 6, 29, 16, 0, 40, 438, DateTimeKind.Utc).AddTicks(1817),
                            MagasinId = 3
                        });
                });

            modelBuilder.Entity("VenteMcService.Models.LigneVente", b =>
                {
                    b.HasOne("VenteMcService.Models.Vente", "Vente")
                        .WithMany("Lignes")
                        .HasForeignKey("VenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vente");
                });

            modelBuilder.Entity("VenteMcService.Models.Vente", b =>
                {
                    b.Navigation("Lignes");
                });
#pragma warning restore 612, 618
        }
    }
}
